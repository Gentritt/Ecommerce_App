{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shop/ProductList.component.html","./src/app/shop/ProductList.component.ts","./src/app/shared/dataService.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;ACN5D,MAAM,YAAY;IAPzB;QAQE,UAAK,GAAG,UAAU,CAAC;KACpB;;wEAFY,YAAY;4FAAZ,YAAY;QCTzB,yEAAiB;QAChB,yEAAsB;QACrB,qEAAI;QAAA,uDAAW;QAAA,4DAAK;QACpB,0EAA6B;QAC9B,4DAAM;QACN,yEAAsB;QACrB,yEAAkB;QAClB,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QACd,4DAAM;QACP,4DAAM;QACP,4DAAM;;QARA,0DAAW;QAAX,0EAAW;;;;;;;;;;;;;;ACDjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEX;AACI;AACQ;;AAepD,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FAHX;QACP,+DAAW;KAClB,YALU;YACP,uEAAa;SACd;mIAMU,SAAS,mBAXd,2DAAY;QACZ,uEAAW,aAGf,uEAAa;;;;;;;;;;;;;;;;;;;;;;ICVf,qEAA+B;IAC9B,uDACD;;IAAA,4DAAK;;;IADJ,0DACD;IADC,yKACD;;ACGK,MAAM,WAAW;IACvB,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QAG9B,aAAQ,GAAG,EAAS,CAAC;QAF3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC/B,CAAC;;sEAHW,WAAW;2FAAX,WAAW;QDPxB,yEAAiB;QAChB,qEAAI;QACH,qGAEK;QACN,4DAAK;QACN,4DAAM;;QAJc,0DAAW;QAAX,iFAAW;;;;;;;;;;;;;;AEH/B;AAAA;AAAO,MAAM,WAAW;IAAxB;QACQ,aAAQ,GAAG;YACjB;gBACC,KAAK,EAAE,eAAe;gBACtB,KAAK,EAAE,KAAK;aAEZ;YACD;gBACC,KAAK,EAAE,gBAAgB;gBACvB,KAAK,EAAE,KAAK;aAEZ;YACD;gBACC,KAAK,EAAE,eAAe;gBACtB,KAAK,EAAE,KAAK;aAEZ;SAAC,CAAC;IACL,CAAC;CAAA;;;;;;;;;;;;;;;;;;;ACjB8C;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: \"./app.component.html\"\n  //template: `\n  ,\n  styles: []\n})\nexport class AppComponent {\n  title = 'Products';\n}\n","<div class=\"row\">\r\n\t<div class=\"col-lg-9\">\r\n\t\t<h3>{{ title }}</h3>\r\n\t\t<product-list></product-list>\r\n\t</div>\r\n\t<div class=\"col-md-3\">\r\n\t\t<div class=\"card\">\r\n\t\t<h3>Carts</h3>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { DataService } from './shared/dataService';\r\nimport { ProductList } from './shop/ProductList.component';\n\n@NgModule({\n  declarations: [\n        AppComponent,\n        ProductList\n  ],\n  imports: [\n    BrowserModule\n  ],\n    providers: [\n        DataService\n],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\r\n<div class=\"row\">\r\n\t<ul>\r\n\t\t<li *ngFor=\"let p of Products\">\r\n\t\t\t{{p.title}}: {{p.price | currency}}\r\n\t\t</li>\r\n\t</ul>\r\n</div>","import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\n\r\n@Component({\r\n\tselector: \"product-list\",\r\n\ttemplateUrl: \"./ProductList.component.html\",\r\n\tstyleUrls: []\r\n})\r\nexport class ProductList {\r\n\tconstructor(private data: DataService) {\r\n\t\tthis.Products = data.Products;\r\n\t}\r\n\tpublic Products = [] as any;\r\n}","export class DataService {\r\n\tpublic Products = [\r\n\t\t{\r\n\t\t\ttitle: \"First Product\",\r\n\t\t\tprice: 19.99\r\n\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"Second Product\",\r\n\t\t\tprice: 19.99\r\n\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"Third Product\",\r\n\t\t\tprice: 19.99\r\n\r\n\t\t}];\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}